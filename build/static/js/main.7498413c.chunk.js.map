{"version":3,"sources":["components/Activities.js","components/App.js","components/Home.js","components/Login.js","components/MyRoutines.js","components/Register.js","components/Routines.js","components/SingleActivity.js","components/SingleRoutine.js","index.js"],"names":["Activities","activities","Fragment","className","map","activity","id","REACT_APP_BASE_URL","process","App","useState","setActivities","loggedIn","setLoggedIn","routines","setRoutines","token","setToken","userRoutines","setUserRoutines","username","setUsername","history","useHistory","fetchActivities","a","fetch","headers","response","json","data","fetchPublicRoutines","getUserName","console","error","props","useEffect","foundToken","localStorage","getItem","to","onClick","removeItem","push","exact","path","Home","log","Login","password","setPassword","handleSubmit","e","preventDefault","method","body","JSON","stringify","user","setItem","onSubmit","type","placeholder","onChange","target","value","disabled","MyRoutines","name","setName","goal","setGoal","isPublic","setIsPublic","fetchUserRoutines","handleDelete","routineId","length","routine","Register","verPass","setVerPass","Routines","SingleActivity","children","description","SingleRoutine","creatorName","count","duration","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7498413c.chunk.js","sourcesContent":["import React from 'react';\n\nimport { SingleActivity } from './'\n\nconst Activities = ({ activities }) => {\n    return activities\n        ? <React.Fragment>\n            <div className='activities'>\n                <span>Activities:</span>\n                {\n                    activities.map(activity => <SingleActivity key={activity.id} activity={activity} />)\n                }\n            </div>\n        </React.Fragment>\n        : 'Loading...'\n};\n\nexport default Activities;","import React, { useState, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport {\n    Activities,\n    Home,\n    Login,\n    MyRoutines,\n    Register,\n    Routines\n} from './';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst App = () => {\n    //STATE\n    const [activities, setActivities] = useState([]);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [routines, setRoutines] = useState([]);\n    const [token, setToken] = useState('');\n    const [userRoutines, setUserRoutines] = useState([]);\n    const [username, setUsername] = useState('');\n    //HOOKS\n    const history = useHistory();\n\n    const fetchActivities = async () => {\n        try {\n            const response = await fetch(`${REACT_APP_BASE_URL}/activities`,\n                { headers: { 'Content-Type': 'application/json' } })\n            const data = await response.json();\n            if (data) {\n                setActivities(data);\n            };\n        } catch (error) {\n            throw error;\n        };\n    };\n\n    const fetchPublicRoutines = async () => {\n        try {\n            const response = await fetch(`${REACT_APP_BASE_URL}/routines`,\n                { headers: { 'Content-Type': 'application/json' } })\n            const data = await response.json();\n            if (data) {\n                setRoutines(data);\n            };\n        } catch (error) {\n            throw error;\n        };\n    };\n\n    const getUserName = async () => {\n        try {\n            const response = await fetch(`${REACT_APP_BASE_URL}/users/me`, {\n                headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },\n            })\n            const data = await response.json();\n            const { username } = data;\n            setUsername(username);\n            return;\n        } catch (error) {\n            console.error(error);\n        };\n    };\n\n    const props = {\n        activities,\n        setActivities,\n        loggedIn,\n        setLoggedIn,\n        routines,\n        setRoutines,\n        token,\n        setToken,\n        userRoutines,\n        setUserRoutines,\n        username,\n        setUsername\n    };\n\n    useEffect(() => {\n        try {\n            fetchPublicRoutines();\n            fetchActivities();\n            getUserName();\n        } catch (error) {\n            console.error(error);\n        };\n    }, [token]);\n\n    useEffect(() => {\n        const foundToken = localStorage.getItem('token');\n        if (foundToken) {\n            setToken(foundToken);\n            setLoggedIn(true);\n        };\n    });\n\n    return <React.Fragment>\n        {/* HEADER */}\n        <header className='site-header'>\n            <div className='logo-container'>\n                <Link to='/' className='logo'><h1>Fitness Trac.kr</h1></Link>\n            </div>\n            <div className='link-bar'>\n                <Link to='/' className='nav-link '>Home</Link>\n                <Link to='/routines' className='nav-link'>Routines</Link>\n\n                {loggedIn\n                    ? <Link to='/account/routines' className='nav-link'>My Routines</Link>\n                    : null\n                }\n                <Link to='/activities' className='nav-link'>Activities</Link>\n                {loggedIn\n                    ? <button onClick={() => { setToken(''); setLoggedIn(false); localStorage.removeItem('token'); localStorage.removeItem('username'); history.push('/') }}>Logout</button>\n                    : <Link to='/account/login'>Log in</Link>\n                }\n            </div>\n        </header>\n\n        {/* ROUTES */}\n        <main id='content'>\n            <Route exact path='/'>\n                <Home {...props} />\n            </Route>\n            <Route exact path='/routines'>\n                <Routines {...props} />\n            </Route>\n            <Route exact path='/account/routines'>\n                <MyRoutines {...props} />\n            </Route>\n            <Route exact path='/activities'>\n                <Activities {...props} />\n            </Route>\n            <Route exact path='/account/login'>\n                <Login {...props} />\n            </Route>\n            <Route exact path='/account/register'>\n                <Register {...props} />\n            </Route>\n        </main>\n    </React.Fragment>\n};\n\nexport default App;","import React from 'react';\nconst Home = () => {\n    console.log(\"Help\");\n        return <React.Fragment>\n            <div>\n                Welcome to FitnessTrac.kr\n            </div>\n        </React.Fragment>;\n    };\n\nexport default Home;\n\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst Login = ({ setLoggedIn, setToken }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`${REACT_APP_BASE_URL}/users/login`, {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ username, password }),\n            })\n            const data = await response.json();\n            const { token, user } = data;\n            if (token) {\n                localStorage.setItem('token', token);\n                localStorage.setItem('username', user.username);\n                setToken(token);\n                setLoggedIn(true);\n                setUsername('');\n                setPassword('');\n                history.push('./routines');\n                return;\n            };\n        } catch (error) {\n            console.error(error);\n        };\n    };\n\n    return <React.Fragment>\n        <h2>Login</h2>\n        <form onSubmit={handleSubmit} className='login-form'>\n            <input type='text' placeholder='enter username' onChange={(e) => setUsername(e.target.value)} value={username} />\n            <input type=\"password\" placeholder=\"password\" onChange={(e) => setPassword(e.target.value)} value={password}></input>\n            <button type=\"submit\" disabled={password < 8}>Login</button>\n        </form>\n        <span>Don't have an account? Click <Link to='/account/register'>here</Link> to register!</span>\n    </React.Fragment>\n};\n\nexport default Login;","import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nimport { SingleRoutine } from './';\n\n\nconst MyRoutines = ({ setUserRoutines, token, username, userRoutines }) => {\n    const [name, setName] = useState('');\n    const [goal, setGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n\n    const fetchUserRoutines = async () => {\n        try {\n            if (username) {\n                const response = await fetch(`${REACT_APP_BASE_URL}/users/${username}/routines`, {\n                    headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },\n                })\n                const data = await response.json();\n                if (data) {\n                    setUserRoutines(data);\n                } else {\n                    setUserRoutines([]);\n                };\n            };\n            return;\n        } catch (error) {\n            console.error(error);\n        };\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`${REACT_APP_BASE_URL}/routines`, {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },\n                body: JSON.stringify({ name, goal, isPublic }),\n            })\n            const data = await response.json();\n            if (data) {\n                setName('');\n                setGoal('');\n                setIsPublic(false);\n                await fetchUserRoutines();\n            };\n            return;\n        } catch (error) {\n            console.error(error);\n        };\n    };\n\n    const handleDelete = async (routineId) => {\n        try {\n            await fetch(`${REACT_APP_BASE_URL}/routines/${routineId}`, {\n                method: \"DELETE\",\n                headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },\n            })\n            await fetchUserRoutines();\n        } catch (error) {\n            console.error(error);\n        };\n    };\n\n    useEffect(() => {\n        try {\n            fetchUserRoutines();\n        } catch (error) {\n            console.error(error);\n        };\n    }, []);\n\n    return <React.Fragment>\n        <div className='form-container'>\n            <h2>Create a new routine:</h2>\n            <form onSubmit={handleSubmit} className='login-form'>\n                <input type='text' placeholder='Name your routine!' onChange={(e) => setName(e.target.value)} value={name} />\n\n                <input type=\"text\" placeholder=\"What is your goal?\" onChange={(e) => setGoal(e.target.value)} value={goal}></input>\n\n                <fieldset>\n                    <label>Private:</label>\n                    <select\n                        name='isPublic'\n                        placeholder='No'\n                        value={isPublic}\n                        onChange={(e) => setIsPublic(e.target.value)}>\n                        <option value='true'>no</option>\n                        <option value='false'>yes</option>\n                    </select>\n                </fieldset>\n\n                <button type=\"submit\" disabled={!name || !goal}>Create Routine</button>\n            </form>\n        </div>\n        {\n            userRoutines.length > 0\n                ? userRoutines.map(routine => {\n                    return <SingleRoutine key={routine.id} routine={routine}>\n                        {\n                            <button onClick={() => handleDelete(routine.id)}>Delete</button>\n                        }\n                    </SingleRoutine>\n                })\n                : null\n        }\n    </React.Fragment>;\n};\n\nexport default MyRoutines;","import React from \"react\";\nimport { useState, useHistory } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst Register = ({ setLoggedIn, setToken }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [verPass, setVerPass] = useState('');\n    const history = useHistory();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`${REACT_APP_BASE_URL}/users/register`, {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ username, password }),\n            })\n            const data = await response.json();\n            const { token, user } = data;\n            if (token) {\n                localStorage.setItem('token', token);\n                localStorage.setItem('username', user.username);\n                setToken(token);\n                setLoggedIn(true);\n                setUsername('');\n                setPassword('');\n                history.push('/')\n            };\n        } catch (error) {\n            console.error(error);\n        };\n    };\n\n    return <React.Fragment>\n        <h2>Register</h2>\n        <form onSubmit={handleSubmit} className='login-form'>\n            <input type='text' placeholder='enter username' onChange={(e) => setUsername(e.target.value)} value={username} />\n\n            <input type=\"password\" placeholder=\"enter password\" onChange={(e) => setPassword(e.target.value)} value={password}></input>\n\n            <input type=\"password\" placeholder=\"verify password\" onChange={(e) => setVerPass(e.target.value)} value={verPass}></input>\n\n            <button type=\"submit\" disabled={!password || !username || password.length < 8 || password !== verPass}>Register</button>\n        </form>\n        <span>Already have an account? Click <Link to='/account/login'>here</Link> to login!</span>\n\n        {password !== verPass && <span className='no-match-alert'>Passwords must match!</span>}\n\n        {password.length < 8 && <span className='no-match-alert'>Passwords must contain at least 8 characters!</span>}\n    </React.Fragment>;\n};\n\nexport default Register;","import React from 'react';\n// import { Link } from 'react-router-dom';\n\nimport { SingleRoutine } from './'\n\nconst Routines = ({ routines }) => {\n    console.log(\"ROUTINES: \", routines);\n    return <React.Fragment>\n        {\n            routines\n                ? routines.map(routine => <SingleRoutine key={routine.id} routine={routine}>\n                    {/* CHILDREN */}\n                </SingleRoutine>)\n                : 'Loading...'\n        }\n    </React.Fragment>;\n};\n\nexport default Routines;","import React from 'react';\n\nconst SingleActivity = ({ children, activity }) => {\n    return activity\n        ? <div className='activity-single'>\n            <span>Name: {activity.name}</span>\n            <span>Description: {activity.description}</span>\n            {children}\n        </div>\n        : 'Loading...'\n};\n\nexport default SingleActivity;","import React from 'react';\n\nimport { SingleActivity } from './'\n\nconst SingleRoutine = ({ children, routine }) => {\n\n    return routine\n        ? <div className='routine-single'>\n            <span><h3>{routine.name}</h3></span>\n            <span><h3 className='creator-name'>created by {routine.creatorName}</h3></span>\n            <span>Goal: {routine.goal}</span>\n            <span>Private: {!routine.isPublic ? 'no' : 'yes'}</span>\n            {children}\n            {\n                routine.activities.length > 0 && <div className='activities'>\n                    <span>Activities:</span>\n                    <ul className='activities-list'>\n                        {\n                            routine.activities.map(activity => <li className='activity-single' key={activity.id}>\n                                <SingleActivity activity={activity}>\n                                    {\n                                        <React.Fragment>\n                                            <span>Repetition: {activity.count} times</span>\n                                            <span>Duration: {activity.duration} minutes</span>\n                                        </React.Fragment>\n                                    }\n                                </SingleActivity>\n                            </li>)\n                        }\n                    </ul>\n                </div>\n            }\n        </div>\n        : 'Loading...'\n};\n\nexport default SingleRoutine;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport { App } from './components';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.querySelector('app')\n);\n"],"sourceRoot":""}